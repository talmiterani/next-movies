- Since the assignment was to build the app with React or Angular, I chose React due to my experience with it.
- Initially, I faced syntax challenges, as I aimed to use the most modern versions of Node and React. Therefore, some of the syntax found on the internet may differ.
- I opted to work with Material-UI for responsive design and consistent styling. Although the UI is not perfect, I prioritized functionality over minor styling issues.
- Despite challenges with Material-UI documentation, I successfully implemented features such as searching by title, sorting by rating/runtime/released, pagination, and linking to IMDb.
- Added option to search with free text. It finds the movies according to the title. 
- Added option to sort by rating/runtime/released
- Added pagination
- Added on each dialog icon button of imdb that click on it will redirect to imdb website on new tab.
- Use axios for api requests
- Added localization package for getting messages from costs
- I wanted to add also tests but I have to admit, I ran into config problems. I added mocks folder which managed to solve problem with axios but i still have a problem with localization package. It does not work well with the withTranslation function. I tried to mock it as well but still getting an error.
  Need to mention that I wanted to use also class component to show that I can work with class and statless components. I mention it becuase I managed to use localization in statless component without the problematic withTranslation function.
- Leaving the test files for Home and MoviesList to demonstrate the initial steps in incorporating tests.

To enhance the app further, I plan to:
- Implement tests and organize them in a __tests__ folder.
- Refine styles by moving overrides and additional styles to classes or creating CSS files if needed.
- Address small UI issues by gaining a better understanding of working with Material-UI.
- Transfer messages from i18n.js to a separate JSON or JS file.
